language:
  - cpp

sudo:
  - false

dist:
  - trusty

cache:
  directories:
    - '$HOME/.sonar/cache'
    - '$HOME/.conan'

linux_addons_default: &linux_addons_default
  coverity_scan:
    project:
      name: "zhuhaow/libnekit"
    notification_email: zhuhaow@gmail.com
    build_command: "make"
    branch_pattern: coverity_scan
    build_command_prepend: "cov-configure --comptype gcc --compiler `which gcc-${GCC_VERSION}`; cmake -DPLATFORM=$PLATFORM -DCMAKE_TOOLCHAIN_FILE=cmake/toolchain/${PLATFORM}.cmake ."


  sonarcloud:
    organization: "zhuhaow-github"
    token:
      secure: "PvuwWq/PWiRBSlaVvJSoa6Q9xZeQntRkA6x0rMQvApago+MsfquYekHMZpN6Wpk4bb5PswDYVmZdgqt9D8vFDieEIAlJ9Zr/CD/YZ1FTvWuL3fzVqM3WFJLaujrpS0jxWV6mx4qfmkU+po5s/z5l3XopxAoabmON/CuyJn3as/PR4xI50bDCqeYO3JHGllHyv9VFlqX0SQ2q45k2Ky9nU+m6oEJlkkmpudDpXHGjn4hECr6fTICkfVsgEWUJBPpTd96ve4cAdOxhHwoK1uhU2bwNrqAUuu8SdE0BR8iUhZjVm7Ha/IK6F0aIIUXdSXiVxDkgKT7VoPT9EddNGh3qLBoFnUwAezEl47y5uaJzeFQpN9EhEnh+Dqdn/3bCVBmpLn3+7toI2QlIYCRRgE/9semV83yILP4TBJmtyvruE7gWV7HB/AANe4/F6oU1TaoS3Lis868Sh2lczusQNkDo1pr8uZo1Pzjoe46IoLrGo/mhDA3cmTYsbqasOQ/7q3hOgWX7DjR2yV3p9ne+/eHlGyOe6N+dMod2ZeLFKLFa0yeXQB1zpW9ADpaXMu0LP/G1YRd7ams7auHmksths0vzzPEivoI8QXhaQYRZGts3vsNbplondrQkHEaTwIIcBVVff2BUzV3k4XW5eeP57Bzx9MkryJXPXvkRFjpxfi4bO5w="

osx_default: &osx_default
  os: osx
  env: PLATFORM=mac COVERAGE=ON CONAN_CONFIG="-s cppstd=14 --build=missing"
  language: objective-c

ios_default: &ios_default
  os: osx
  language: objective-c
  env: PLATFORM=ios CONAN_CONFIG="-s cppstd=14 --build=missing --profile=conan/ios_profile"

matrix:
  include:
    - <<: *osx_default
      osx_image: xcode10
    - <<: *osx_default
      osx_image: xcode9.3
    - <<: *osx_default
      osx_image: xcode9
    - <<: *osx_default
      osx_image: xcode8.3

    - <<: *ios_default
      osx_image: xcode10
    - <<: *ios_default
      osx_image: xcode9.3
    - <<: *ios_default
      osx_image: xcode9
    - <<: *ios_default
      osx_image: xcode8.3

    - os: linux
      env: PLATFORM=linux COVERAGE=ON GCC_VERSION=5 MATRIX_EVAL="CC=gcc-${GCC_VERSION} && CXX=g++-${GCC_VERSION}" COMPILE_PREFIX="build-wrapper-linux-x86-64 --out-dir bw-output" CONAN_CONFIG="-s cppstd=14 -s compiler.libcxx=libstdc++11 --build=missing" CONAN_CPU_COUNT=4
      addons:
        <<: *linux_addons_default
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - valgrind
            - g++-5

    - os: linux
      env: PLATFORM=linux COVERAGE=ON GCC_VERSION=6 MATRIX_EVAL="CC=gcc-${GCC_VERSION} && CXX=g++-${GCC_VERSION}" COMPILE_PREFIX="build-wrapper-linux-x86-64 --out-dir bw-output" CONAN_CONFIG="-s cppstd=14 -s compiler.libcxx=libstdc++11 --build=missing" CONAN_CPU_COUNT=4
      addons:
        <<: *linux_addons_default
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - valgrind
            - g++-6

    - os: linux
      env: PLATFORM=linux COVERAGE=ON GCC_VERSION=7 MATRIX_EVAL="CC=gcc-${GCC_VERSION} && CXX=g++-${GCC_VERSION}" COMPILE_PREFIX="build-wrapper-linux-x86-64 --out-dir bw-output" CONAN_CONFIG="-s cppstd=14 -s compiler.libcxx=libstdc++11 --build=missing" CONAN_CPU_COUNT=4
      addons:
        <<: *linux_addons_default
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - valgrind
            - g++-7

    - os: linux
      env: PLATFORM=linux COVERAGE=ON GCC_VERSION=8 MATRIX_EVAL="CC=gcc-${GCC_VERSION} && CXX=g++-${GCC_VERSION}" COMPILE_PREFIX="build-wrapper-linux-x86-64 --out-dir bw-output" CONAN_CONFIG="-s cppstd=14 -s compiler.libcxx=libstdc++11 --build=missing" CONAN_CPU_COUNT=4
      addons:
        <<: *linux_addons_default
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - valgrind
            - g++-8

before_install:
  - eval "${MATRIX_EVAL}"
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update && brew install pipenv moreutils; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then pip install --user pipenv urllib3[secure]; fi

install:
  - pipenv install --deploy
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then ./scripts/install_cmake.sh; export PATH=`pwd`/deps/cmake/bin:$PATH; cmake --version; fi

before_script:
  - pipenv run conan remote add -f bincrafters https://api.bintray.com/conan/bincrafters/public-conan
  - pipenv run conan remote add -f libnekit https://api.bintray.com/conan/zhuhaow/libnekit
  - eval "pipenv run conan install . -u -if build/ $CONAN_CONFIG"

script:
  - set -e
  - if [ "${COVERITY_SCAN_BRANCH}" != 1 ]; then scripts/travis.sh; fi

after_success:
  - if [ "$COVERAGE" == "ON" ]; then bash <(curl -s https://codecov.io/bash); fi
